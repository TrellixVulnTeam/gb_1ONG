{"id":"node_modules/core-js/internals/get-iterator.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/global","loc":{"line":1,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\get-iterator.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/function-call","loc":{"line":2,"column":19},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\get-iterator.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\function-call.js"},{"name":"../internals/a-callable","loc":{"line":3,"column":24},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\get-iterator.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\a-callable.js"},{"name":"../internals/an-object","loc":{"line":4,"column":23},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\get-iterator.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\an-object.js"},{"name":"../internals/try-to-string","loc":{"line":5,"column":26},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\get-iterator.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\try-to-string.js"},{"name":"../internals/get-iterator-method","loc":{"line":6,"column":32},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\get-iterator.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\get-iterator-method.js"}],"generated":{"js":"\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar tryToString = require('../internals/try-to-string');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nvar TypeError = global.TypeError;\n\nmodule.exports = function (argument, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;\n  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));\n  throw TypeError(tryToString(argument) + ' is not iterable');\n};\n"},"sourceMaps":null,"error":null,"hash":"2f2399d56e03f553357ac5a140dbc9da","cacheData":{"env":{}}}