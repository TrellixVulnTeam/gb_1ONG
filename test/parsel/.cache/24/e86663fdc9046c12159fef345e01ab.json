{"id":"node_modules/core-js/modules/es.date.to-string.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/function-uncurry-this","loc":{"line":1,"column":26},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.date.to-string.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\function-uncurry-this.js"},{"name":"../internals/redefine","loc":{"line":2,"column":23},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.date.to-string.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\redefine.js"}],"generated":{"js":"var uncurryThis = require('../internals/function-uncurry-this');\nvar redefine = require('../internals/redefine');\n\nvar DatePrototype = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar un$DateToString = uncurryThis(DatePrototype[TO_STRING]);\nvar getTime = uncurryThis(DatePrototype.getTime);\n\n// `Date.prototype.toString` method\n// https://tc39.es/ecma262/#sec-date.prototype.tostring\nif (String(new Date(NaN)) != INVALID_DATE) {\n  redefine(DatePrototype, TO_STRING, function toString() {\n    var value = getTime(this);\n    // eslint-disable-next-line no-self-compare -- NaN check\n    return value === value ? un$DateToString(this) : INVALID_DATE;\n  });\n}\n"},"sourceMaps":null,"error":null,"hash":"369c3568dda0171d72b90e20c3771f19","cacheData":{"env":{}}}