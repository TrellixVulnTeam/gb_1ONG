{"id":"node_modules/core-js/internals/regexp-unsupported-dot-all.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/fails","loc":{"line":1,"column":20},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\regexp-unsupported-dot-all.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\fails.js"},{"name":"../internals/global","loc":{"line":2,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\regexp-unsupported-dot-all.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\global.js"}],"generated":{"js":"\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('.', 's');\n  return !(re.dotAll && re.exec('\\n') && re.flags === 's');\n});\n"},"sourceMaps":null,"error":null,"hash":"7b8bc6978568a9102170471fa3820eaf","cacheData":{"env":{}}}