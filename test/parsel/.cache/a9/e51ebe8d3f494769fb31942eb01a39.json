{"id":"node_modules/core-js/internals/to-index.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/global","loc":{"line":1,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-index.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/to-integer-or-infinity","loc":{"line":2,"column":34},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-index.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-integer-or-infinity.js"},{"name":"../internals/to-length","loc":{"line":3,"column":23},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-index.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-length.js"}],"generated":{"js":"\nvar global = require('../internals/global');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\n\nvar RangeError = global.RangeError;\n\n// `ToIndex` abstract operation\n// https://tc39.es/ecma262/#sec-toindex\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toIntegerOrInfinity(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length or index');\n  return length;\n};\n"},"sourceMaps":null,"error":null,"hash":"a4d6920f11be4a43d385f05b8db45030","cacheData":{"env":{}}}