{"id":"node_modules/core-js/internals/is-symbol.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/global","loc":{"line":1,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\is-symbol.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/get-built-in","loc":{"line":2,"column":25},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\is-symbol.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\get-built-in.js"},{"name":"../internals/is-callable","loc":{"line":3,"column":25},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\is-symbol.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\is-callable.js"},{"name":"../internals/object-is-prototype-of","loc":{"line":4,"column":28},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\is-symbol.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\object-is-prototype-of.js"},{"name":"../internals/use-symbol-as-uid","loc":{"line":5,"column":32},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\is-symbol.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\use-symbol-as-uid.js"}],"generated":{"js":"\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Object = global.Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object(it));\n};\n"},"sourceMaps":null,"error":null,"hash":"b492a1c6d2044728d8e475211ac13cfe","cacheData":{"env":{}}}