{"id":"node_modules/core-js/modules/es.typed-array.slice.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/array-buffer-view-core","loc":{"line":2,"column":34},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.typed-array.slice.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-buffer-view-core.js"},{"name":"../internals/typed-array-species-constructor","loc":{"line":3,"column":43},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.typed-array.slice.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\typed-array-species-constructor.js"},{"name":"../internals/fails","loc":{"line":4,"column":20},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.typed-array.slice.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\fails.js"},{"name":"../internals/array-slice","loc":{"line":5,"column":25},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.typed-array.slice.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-slice.js"}],"generated":{"js":"'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');\nvar fails = require('../internals/fails');\nvar arraySlice = require('../internals/array-slice');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar FORCED = fails(function () {\n  // eslint-disable-next-line es/no-typed-arrays -- required for testing\n  new Int8Array(1).slice();\n});\n\n// `%TypedArray%.prototype.slice` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice\nexportTypedArrayMethod('slice', function slice(start, end) {\n  var list = arraySlice(aTypedArray(this), start, end);\n  var C = typedArraySpeciesConstructor(this);\n  var index = 0;\n  var length = list.length;\n  var result = new C(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n}, FORCED);\n"},"sourceMaps":null,"error":null,"hash":"1385afb2b86b4651b2c2eeae2faacc82","cacheData":{"env":{}}}