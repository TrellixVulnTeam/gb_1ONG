{"id":"node_modules/core-js/modules/web.url-search-params.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../modules/es.array.iterator","loc":{"line":3,"column":8},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.array.iterator.js"},{"name":"../internals/export","loc":{"line":4,"column":16},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\export.js"},{"name":"../internals/global","loc":{"line":5,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/get-built-in","loc":{"line":6,"column":25},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\get-built-in.js"},{"name":"../internals/function-call","loc":{"line":7,"column":19},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\function-call.js"},{"name":"../internals/function-uncurry-this","loc":{"line":8,"column":26},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\function-uncurry-this.js"},{"name":"../internals/native-url","loc":{"line":9,"column":29},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\native-url.js"},{"name":"../internals/redefine","loc":{"line":10,"column":23},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\redefine.js"},{"name":"../internals/redefine-all","loc":{"line":11,"column":26},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\redefine-all.js"},{"name":"../internals/set-to-string-tag","loc":{"line":12,"column":29},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\set-to-string-tag.js"},{"name":"../internals/create-iterator-constructor","loc":{"line":13,"column":40},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\create-iterator-constructor.js"},{"name":"../internals/internal-state","loc":{"line":14,"column":34},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\internal-state.js"},{"name":"../internals/an-instance","loc":{"line":15,"column":25},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\an-instance.js"},{"name":"../internals/is-callable","loc":{"line":16,"column":25},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\is-callable.js"},{"name":"../internals/has-own-property","loc":{"line":17,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\has-own-property.js"},{"name":"../internals/function-bind-context","loc":{"line":18,"column":19},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\function-bind-context.js"},{"name":"../internals/classof","loc":{"line":19,"column":22},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\classof.js"},{"name":"../internals/an-object","loc":{"line":20,"column":23},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\an-object.js"},{"name":"../internals/is-object","loc":{"line":21,"column":23},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\is-object.js"},{"name":"../internals/to-string","loc":{"line":22,"column":24},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-string.js"},{"name":"../internals/object-create","loc":{"line":23,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\object-create.js"},{"name":"../internals/create-property-descriptor","loc":{"line":24,"column":39},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\create-property-descriptor.js"},{"name":"../internals/get-iterator","loc":{"line":25,"column":26},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\get-iterator.js"},{"name":"../internals/get-iterator-method","loc":{"line":26,"column":32},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\get-iterator-method.js"},{"name":"../internals/well-known-symbol","loc":{"line":27,"column":30},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\well-known-symbol.js"},{"name":"../internals/array-sort","loc":{"line":28,"column":24},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\web.url-search-params.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-sort.js"}],"generated":{"js":"\n'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.array.iterator');\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar InternalStateModule = require('../internals/internal-state');\nvar anInstance = require('../internals/an-instance');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar bind = require('../internals/function-bind-context');\nvar classof = require('../internals/classof');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar $toString = require('../internals/to-string');\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arraySort = require('../internals/array-sort');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar URL_SEARCH_PARAMS = 'URLSearchParams';\nvar URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);\nvar getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);\n\nvar n$Fetch = getBuiltIn('fetch');\nvar N$Request = getBuiltIn('Request');\nvar Headers = getBuiltIn('Headers');\nvar RequestPrototype = N$Request && N$Request.prototype;\nvar HeadersPrototype = Headers && Headers.prototype;\nvar RegExp = global.RegExp;\nvar TypeError = global.TypeError;\nvar decodeURIComponent = global.decodeURIComponent;\nvar encodeURIComponent = global.encodeURIComponent;\nvar charAt = uncurryThis(''.charAt);\nvar join = uncurryThis([].join);\nvar push = uncurryThis([].push);\nvar replace = uncurryThis(''.replace);\nvar shift = uncurryThis([].shift);\nvar splice = uncurryThis([].splice);\nvar split = uncurryThis(''.split);\nvar stringSlice = uncurryThis(''.slice);\n\nvar plus = /\\+/g;\nvar sequences = Array(4);\n\nvar percentSequence = function (bytes) {\n  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\\\da-f]{2}){' + bytes + '})', 'gi'));\n};\n\nvar percentDecode = function (sequence) {\n  try {\n    return decodeURIComponent(sequence);\n  } catch (error) {\n    return sequence;\n  }\n};\n\nvar deserialize = function (it) {\n  var result = replace(it, plus, ' ');\n  var bytes = 4;\n  try {\n    return decodeURIComponent(result);\n  } catch (error) {\n    while (bytes) {\n      result = replace(result, percentSequence(bytes--), percentDecode);\n    }\n    return result;\n  }\n};\n\nvar find = /[!'()~]|%20/g;\n\nvar replacements = {\n  '!': '%21',\n  \"'\": '%27',\n  '(': '%28',\n  ')': '%29',\n  '~': '%7E',\n  '%20': '+'\n};\n\nvar replacer = function (match) {\n  return replacements[match];\n};\n\nvar serialize = function (it) {\n  return replace(encodeURIComponent(it), find, replacer);\n};\n\nvar parseSearchParams = function (result, query) {\n  if (query) {\n    var attributes = split(query, '&');\n    var index = 0;\n    var attribute, entry;\n    while (index < attributes.length) {\n      attribute = attributes[index++];\n      if (attribute.length) {\n        entry = split(attribute, '=');\n        push(result, {\n          key: deserialize(shift(entry)),\n          value: deserialize(join(entry, '='))\n        });\n      }\n    }\n  }\n};\n\nvar updateSearchParams = function (query) {\n  this.entries.length = 0;\n  parseSearchParams(this.entries, query);\n};\n\nvar validateArgumentsLength = function (passed, required) {\n  if (passed < required) throw TypeError('Not enough arguments');\n};\n\nvar URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {\n  setInternalState(this, {\n    type: URL_SEARCH_PARAMS_ITERATOR,\n    iterator: getIterator(getInternalParamsState(params).entries),\n    kind: kind\n  });\n}, 'Iterator', function next() {\n  var state = getInternalIteratorState(this);\n  var kind = state.kind;\n  var step = state.iterator.next();\n  var entry = step.value;\n  if (!step.done) {\n    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];\n  } return step;\n});\n\n// `URLSearchParams` constructor\n// https://url.spec.whatwg.org/#interface-urlsearchparams\nvar URLSearchParamsConstructor = function URLSearchParams(/* init */) {\n  anInstance(this, URLSearchParamsPrototype);\n  var init = arguments.length > 0 ? arguments[0] : undefined;\n  var that = this;\n  var entries = [];\n  var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;\n\n  setInternalState(that, {\n    type: URL_SEARCH_PARAMS,\n    entries: entries,\n    updateURL: function () { /* empty */ },\n    updateSearchParams: updateSearchParams\n  });\n\n  if (init !== undefined) {\n    if (isObject(init)) {\n      iteratorMethod = getIteratorMethod(init);\n      if (iteratorMethod) {\n        iterator = getIterator(init, iteratorMethod);\n        next = iterator.next;\n        while (!(step = call(next, iterator)).done) {\n          entryIterator = getIterator(anObject(step.value));\n          entryNext = entryIterator.next;\n          if (\n            (first = call(entryNext, entryIterator)).done ||\n            (second = call(entryNext, entryIterator)).done ||\n            !call(entryNext, entryIterator).done\n          ) throw TypeError('Expected sequence with length 2');\n          push(entries, { key: $toString(first.value), value: $toString(second.value) });\n        }\n      } else for (key in init) if (hasOwn(init, key)) push(entries, { key: key, value: $toString(init[key]) });\n    } else {\n      parseSearchParams(\n        entries,\n        typeof init == 'string' ? charAt(init, 0) === '?' ? stringSlice(init, 1) : init : $toString(init)\n      );\n    }\n  }\n};\n\nvar URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;\n\nredefineAll(URLSearchParamsPrototype, {\n  // `URLSearchParams.prototype.append` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-append\n  append: function append(name, value) {\n    validateArgumentsLength(arguments.length, 2);\n    var state = getInternalParamsState(this);\n    push(state.entries, { key: $toString(name), value: $toString(value) });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.delete` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete\n  'delete': function (name) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var key = $toString(name);\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index].key === key) splice(entries, index, 1);\n      else index++;\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.get` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-get\n  get: function get(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = $toString(name);\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) return entries[index].value;\n    }\n    return null;\n  },\n  // `URLSearchParams.prototype.getAll` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall\n  getAll: function getAll(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = $toString(name);\n    var result = [];\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) push(result, entries[index].value);\n    }\n    return result;\n  },\n  // `URLSearchParams.prototype.has` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-has\n  has: function has(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = $toString(name);\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index++].key === key) return true;\n    }\n    return false;\n  },\n  // `URLSearchParams.prototype.set` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-set\n  set: function set(name, value) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var found = false;\n    var key = $toString(name);\n    var val = $toString(value);\n    var index = 0;\n    var entry;\n    for (; index < entries.length; index++) {\n      entry = entries[index];\n      if (entry.key === key) {\n        if (found) splice(entries, index--, 1);\n        else {\n          found = true;\n          entry.value = val;\n        }\n      }\n    }\n    if (!found) push(entries, { key: key, value: val });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.sort` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort\n  sort: function sort() {\n    var state = getInternalParamsState(this);\n    arraySort(state.entries, function (a, b) {\n      return a.key > b.key ? 1 : -1;\n    });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.forEach` method\n  forEach: function forEach(callback /* , thisArg */) {\n    var entries = getInternalParamsState(this).entries;\n    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined);\n    var index = 0;\n    var entry;\n    while (index < entries.length) {\n      entry = entries[index++];\n      boundFunction(entry.value, entry.key, this);\n    }\n  },\n  // `URLSearchParams.prototype.keys` method\n  keys: function keys() {\n    return new URLSearchParamsIterator(this, 'keys');\n  },\n  // `URLSearchParams.prototype.values` method\n  values: function values() {\n    return new URLSearchParamsIterator(this, 'values');\n  },\n  // `URLSearchParams.prototype.entries` method\n  entries: function entries() {\n    return new URLSearchParamsIterator(this, 'entries');\n  }\n}, { enumerable: true });\n\n// `URLSearchParams.prototype[@@iterator]` method\nredefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries, { name: 'entries' });\n\n// `URLSearchParams.prototype.toString` method\n// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\nredefine(URLSearchParamsPrototype, 'toString', function toString() {\n  var entries = getInternalParamsState(this).entries;\n  var result = [];\n  var index = 0;\n  var entry;\n  while (index < entries.length) {\n    entry = entries[index++];\n    push(result, serialize(entry.key) + '=' + serialize(entry.value));\n  } return join(result, '&');\n}, { enumerable: true });\n\nsetToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n\n$({ global: true, forced: !USE_NATIVE_URL }, {\n  URLSearchParams: URLSearchParamsConstructor\n});\n\n// Wrap `fetch` and `Request` for correct work with polyfilled `URLSearchParams`\nif (!USE_NATIVE_URL && isCallable(Headers)) {\n  var headersHas = uncurryThis(HeadersPrototype.has);\n  var headersSet = uncurryThis(HeadersPrototype.set);\n\n  var wrapRequestOptions = function (init) {\n    if (isObject(init)) {\n      var body = init.body;\n      var headers;\n      if (classof(body) === URL_SEARCH_PARAMS) {\n        headers = init.headers ? new Headers(init.headers) : new Headers();\n        if (!headersHas(headers, 'content-type')) {\n          headersSet(headers, 'content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n        return create(init, {\n          body: createPropertyDescriptor(0, $toString(body)),\n          headers: createPropertyDescriptor(0, headers)\n        });\n      }\n    } return init;\n  };\n\n  if (isCallable(n$Fetch)) {\n    $({ global: true, enumerable: true, forced: true }, {\n      fetch: function fetch(input /* , init */) {\n        return n$Fetch(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});\n      }\n    });\n  }\n\n  if (isCallable(N$Request)) {\n    var RequestConstructor = function Request(input /* , init */) {\n      anInstance(this, RequestPrototype);\n      return new N$Request(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});\n    };\n\n    RequestPrototype.constructor = RequestConstructor;\n    RequestConstructor.prototype = RequestPrototype;\n\n    $({ global: true, forced: true }, {\n      Request: RequestConstructor\n    });\n  }\n}\n\nmodule.exports = {\n  URLSearchParams: URLSearchParamsConstructor,\n  getState: getInternalParamsState\n};\n"},"sourceMaps":null,"error":null,"hash":"8c1c781f7c4d86820e70ed2b75f28c83","cacheData":{"env":{}}}