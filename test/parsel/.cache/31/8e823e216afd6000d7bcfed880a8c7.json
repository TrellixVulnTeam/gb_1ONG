{"id":"node_modules/core-js/internals/array-from.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/global","loc":{"line":2,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-from.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/function-bind-context","loc":{"line":3,"column":19},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-from.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\function-bind-context.js"},{"name":"../internals/function-call","loc":{"line":4,"column":19},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-from.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\function-call.js"},{"name":"../internals/to-object","loc":{"line":5,"column":23},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-from.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-object.js"},{"name":"../internals/call-with-safe-iteration-closing","loc":{"line":6,"column":43},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-from.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\call-with-safe-iteration-closing.js"},{"name":"../internals/is-array-iterator-method","loc":{"line":7,"column":36},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-from.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\is-array-iterator-method.js"},{"name":"../internals/is-constructor","loc":{"line":8,"column":28},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-from.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\is-constructor.js"},{"name":"../internals/length-of-array-like","loc":{"line":9,"column":32},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-from.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\length-of-array-like.js"},{"name":"../internals/create-property","loc":{"line":10,"column":29},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-from.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\create-property.js"},{"name":"../internals/get-iterator","loc":{"line":11,"column":26},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-from.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\get-iterator.js"},{"name":"../internals/get-iterator-method","loc":{"line":12,"column":32},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-from.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\get-iterator-method.js"}],"generated":{"js":"\n'use strict';\nvar global = require('../internals/global');\nvar bind = require('../internals/function-bind-context');\nvar call = require('../internals/function-call');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar isConstructor = require('../internals/is-constructor');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nvar Array = global.Array;\n\n// `Array.from` method implementation\n// https://tc39.es/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var IS_CONSTRUCTOR = isConstructor(this);\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined);\n  var iteratorMethod = getIteratorMethod(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod && !(this == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = getIterator(O, iteratorMethod);\n    next = iterator.next;\n    result = IS_CONSTRUCTOR ? new this() : [];\n    for (;!(step = call(next, iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty(result, index, value);\n    }\n  } else {\n    length = lengthOfArrayLike(O);\n    result = IS_CONSTRUCTOR ? new this(length) : Array(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n"},"sourceMaps":null,"error":null,"hash":"43cd1f56ae0935f03a962a3db509c688","cacheData":{"env":{}}}