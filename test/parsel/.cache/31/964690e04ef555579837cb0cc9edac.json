{"id":"node_modules/core-js/modules/es.regexp.dot-all.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/global","loc":{"line":1,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.regexp.dot-all.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/descriptors","loc":{"line":2,"column":26},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.regexp.dot-all.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\descriptors.js"},{"name":"../internals/regexp-unsupported-dot-all","loc":{"line":3,"column":34},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.regexp.dot-all.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\regexp-unsupported-dot-all.js"},{"name":"../internals/classof-raw","loc":{"line":4,"column":22},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.regexp.dot-all.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\classof-raw.js"},{"name":"../internals/object-define-property","loc":{"line":5,"column":29},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.regexp.dot-all.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\object-define-property.js"},{"name":"../internals/internal-state","loc":{"line":6,"column":31},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.regexp.dot-all.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\internal-state.js"}],"generated":{"js":"\nvar global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\nvar classof = require('../internals/classof-raw');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getInternalState = require('../internals/internal-state').get;\n\nvar RegExpPrototype = RegExp.prototype;\nvar TypeError = global.TypeError;\n\n// `RegExp.prototype.dotAll` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.dotall\nif (DESCRIPTORS && UNSUPPORTED_DOT_ALL) {\n  defineProperty(RegExpPrototype, 'dotAll', {\n    configurable: true,\n    get: function () {\n      if (this === RegExpPrototype) return undefined;\n      // We can't use InternalStateModule.getterFor because\n      // we don't add metadata for regexps created by a literal.\n      if (classof(this) === 'RegExp') {\n        return !!getInternalState(this).dotAll;\n      }\n      throw TypeError('Incompatible receiver, RegExp required');\n    }\n  });\n}\n"},"sourceMaps":null,"error":null,"hash":"a79c2c8a45a44b3114f2413948e9fc48","cacheData":{"env":{}}}