{"id":"node_modules/core-js/modules/es.unescape.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/export","loc":{"line":2,"column":16},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.unescape.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\export.js"},{"name":"../internals/function-uncurry-this","loc":{"line":3,"column":26},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.unescape.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\function-uncurry-this.js"},{"name":"../internals/to-string","loc":{"line":4,"column":23},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.unescape.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-string.js"}],"generated":{"js":"'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\n\nvar fromCharCode = String.fromCharCode;\nvar charAt = uncurryThis(''.charAt);\nvar exec = uncurryThis(/./.exec);\nvar stringSlice = uncurryThis(''.slice);\n\nvar hex2 = /^[\\da-f]{2}$/i;\nvar hex4 = /^[\\da-f]{4}$/i;\n\n// `unescape` method\n// https://tc39.es/ecma262/#sec-unescape-string\n$({ global: true }, {\n  unescape: function unescape(string) {\n    var str = toString(string);\n    var result = '';\n    var length = str.length;\n    var index = 0;\n    var chr, part;\n    while (index < length) {\n      chr = charAt(str, index++);\n      if (chr === '%') {\n        if (charAt(str, index) === 'u') {\n          part = stringSlice(str, index + 1, index + 5);\n          if (exec(hex4, part)) {\n            result += fromCharCode(parseInt(part, 16));\n            index += 5;\n            continue;\n          }\n        } else {\n          part = stringSlice(str, index, index + 2);\n          if (exec(hex2, part)) {\n            result += fromCharCode(parseInt(part, 16));\n            index += 2;\n            continue;\n          }\n        }\n      }\n      result += chr;\n    } return result;\n  }\n});\n"},"sourceMaps":null,"error":null,"hash":"c01cf2aee9ae2cc13efe19fb8acfb2c7","cacheData":{"env":{}}}