{"id":"node_modules/core-js/internals/a-possible-prototype.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/global","loc":{"line":1,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\a-possible-prototype.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/is-callable","loc":{"line":2,"column":25},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\a-possible-prototype.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\is-callable.js"}],"generated":{"js":"\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar String = global.String;\nvar TypeError = global.TypeError;\n\nmodule.exports = function (argument) {\n  if (typeof argument == 'object' || isCallable(argument)) return argument;\n  throw TypeError(\"Can't set \" + String(argument) + ' as a prototype');\n};\n"},"sourceMaps":null,"error":null,"hash":"96aa71b0b8561f94fef9d447e05de56a","cacheData":{"env":{}}}