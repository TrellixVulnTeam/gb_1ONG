{"id":"node_modules/core-js/modules/es.function.name.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/descriptors","loc":{"line":1,"column":26},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.function.name.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\descriptors.js"},{"name":"../internals/function-name","loc":{"line":2,"column":35},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.function.name.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\function-name.js"},{"name":"../internals/function-uncurry-this","loc":{"line":3,"column":26},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.function.name.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\function-uncurry-this.js"},{"name":"../internals/object-define-property","loc":{"line":4,"column":29},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.function.name.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\object-define-property.js"}],"generated":{"js":"var DESCRIPTORS = require('../internals/descriptors');\nvar FUNCTION_NAME_EXISTS = require('../internals/function-name').EXISTS;\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar functionToString = uncurryThis(FunctionPrototype.toString);\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar regExpExec = uncurryThis(nameRE.exec);\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return regExpExec(nameRE, functionToString(this))[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n"},"sourceMaps":null,"error":null,"hash":"9fa5e5dad70ba8af89abc445e5420828","cacheData":{"env":{}}}