{"id":"node_modules/core-js/internals/regexp-unsupported-ncg.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/fails","loc":{"line":1,"column":20},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\regexp-unsupported-ncg.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\fails.js"},{"name":"../internals/global","loc":{"line":2,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\regexp-unsupported-ncg.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\global.js"}],"generated":{"js":"\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('(?<a>b)', 'g');\n  return re.exec('b').groups.a !== 'b' ||\n    'b'.replace(re, '$<a>c') !== 'bc';\n});\n"},"sourceMaps":null,"error":null,"hash":"3dd18a28dc6638a7c8c102f62e567fcf","cacheData":{"env":{}}}