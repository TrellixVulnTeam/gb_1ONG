{"id":"node_modules/core-js/modules/es.json.stringify.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/export","loc":{"line":1,"column":16},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.json.stringify.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\export.js"},{"name":"../internals/global","loc":{"line":2,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.json.stringify.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/get-built-in","loc":{"line":3,"column":25},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.json.stringify.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\get-built-in.js"},{"name":"../internals/function-apply","loc":{"line":4,"column":20},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.json.stringify.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\function-apply.js"},{"name":"../internals/function-uncurry-this","loc":{"line":5,"column":26},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.json.stringify.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\function-uncurry-this.js"},{"name":"../internals/fails","loc":{"line":6,"column":20},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.json.stringify.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\fails.js"}],"generated":{"js":"\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar apply = require('../internals/function-apply');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\n\nvar Array = global.Array;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar exec = uncurryThis(/./.exec);\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar replace = uncurryThis(''.replace);\nvar numberToString = uncurryThis(1.0.toString);\n\nvar tester = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\n\nvar fix = function (match, offset, string) {\n  var prev = charAt(string, offset - 1);\n  var next = charAt(string, offset + 1);\n  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {\n    return '\\\\u' + numberToString(charCodeAt(match, 0), 16);\n  } return match;\n};\n\nvar FORCED = fails(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"'\n    || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\n\nif ($stringify) {\n  // `JSON.stringify` method\n  // https://tc39.es/ecma262/#sec-json.stringify\n  // https://github.com/tc39/proposal-well-formed-stringify\n  $({ target: 'JSON', stat: true, forced: FORCED }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      for (var i = 0, l = arguments.length, args = Array(l); i < l; i++) args[i] = arguments[i];\n      var result = apply($stringify, null, args);\n      return typeof result == 'string' ? replace(result, tester, fix) : result;\n    }\n  });\n}\n"},"sourceMaps":null,"error":null,"hash":"d8dd0097a913a0f51c00a2602cc92b41","cacheData":{"env":{}}}