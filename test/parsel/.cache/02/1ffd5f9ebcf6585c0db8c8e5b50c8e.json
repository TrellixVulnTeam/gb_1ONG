{"id":"node_modules/core-js/modules/es.string.starts-with.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/export","loc":{"line":2,"column":16},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.string.starts-with.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\export.js"},{"name":"../internals/function-uncurry-this","loc":{"line":3,"column":26},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.string.starts-with.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\function-uncurry-this.js"},{"name":"../internals/object-get-own-property-descriptor","loc":{"line":4,"column":39},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.string.starts-with.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\object-get-own-property-descriptor.js"},{"name":"../internals/to-length","loc":{"line":5,"column":23},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.string.starts-with.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-length.js"},{"name":"../internals/to-string","loc":{"line":6,"column":23},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.string.starts-with.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-string.js"},{"name":"../internals/not-a-regexp","loc":{"line":7,"column":25},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.string.starts-with.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\not-a-regexp.js"},{"name":"../internals/require-object-coercible","loc":{"line":8,"column":37},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.string.starts-with.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\require-object-coercible.js"},{"name":"../internals/correct-is-regexp-logic","loc":{"line":9,"column":35},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.string.starts-with.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\correct-is-regexp-logic.js"},{"name":"../internals/is-pure","loc":{"line":10,"column":22},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.string.starts-with.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\is-pure.js"}],"generated":{"js":"'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\n// eslint-disable-next-line es/no-string-prototype-startswith -- safe\nvar un$StartsWith = uncurryThis(''.startsWith);\nvar stringSlice = uncurryThis(''.slice);\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.startsWith` method\n// https://tc39.es/ecma262/#sec-string.prototype.startswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = toString(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = toString(searchString);\n    return un$StartsWith\n      ? un$StartsWith(that, search, index)\n      : stringSlice(that, index, index + search.length) === search;\n  }\n});\n"},"sourceMaps":null,"error":null,"hash":"17698e4e2f1fe885bb91075a1066ede1","cacheData":{"env":{}}}