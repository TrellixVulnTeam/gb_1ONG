{"id":"node_modules/core-js/internals/to-positive-integer.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/global","loc":{"line":1,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-positive-integer.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/to-integer-or-infinity","loc":{"line":2,"column":34},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-positive-integer.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-integer-or-infinity.js"}],"generated":{"js":"\nvar global = require('../internals/global');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar RangeError = global.RangeError;\n\nmodule.exports = function (it) {\n  var result = toIntegerOrInfinity(it);\n  if (result < 0) throw RangeError(\"The argument can't be less than 0\");\n  return result;\n};\n"},"sourceMaps":null,"error":null,"hash":"2145ce24f5ac98911d15e1f59985aace","cacheData":{"env":{}}}