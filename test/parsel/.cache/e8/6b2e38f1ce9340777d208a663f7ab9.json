{"id":"node_modules/core-js/modules/es.typed-array.set.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/global","loc":{"line":2,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.typed-array.set.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/array-buffer-view-core","loc":{"line":3,"column":34},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.typed-array.set.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-buffer-view-core.js"},{"name":"../internals/length-of-array-like","loc":{"line":4,"column":32},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.typed-array.set.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\length-of-array-like.js"},{"name":"../internals/to-offset","loc":{"line":5,"column":23},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.typed-array.set.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-offset.js"},{"name":"../internals/to-object","loc":{"line":6,"column":23},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.typed-array.set.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-object.js"},{"name":"../internals/fails","loc":{"line":7,"column":20},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.typed-array.set.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\fails.js"}],"generated":{"js":"\n'use strict';\nvar global = require('../internals/global');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toOffset = require('../internals/to-offset');\nvar toObject = require('../internals/to-object');\nvar fails = require('../internals/fails');\n\nvar RangeError = global.RangeError;\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar FORCED = fails(function () {\n  // eslint-disable-next-line es/no-typed-arrays -- required for testing\n  new Int8Array(1).set({});\n});\n\n// `%TypedArray%.prototype.set` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set\nexportTypedArrayMethod('set', function set(arrayLike /* , offset */) {\n  aTypedArray(this);\n  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);\n  var length = this.length;\n  var src = toObject(arrayLike);\n  var len = lengthOfArrayLike(src);\n  var index = 0;\n  if (len + offset > length) throw RangeError('Wrong length');\n  while (index < len) this[offset + index] = src[index++];\n}, FORCED);\n"},"sourceMaps":null,"error":null,"hash":"bf97a0aea1e56c19473d7671b726008b","cacheData":{"env":{}}}