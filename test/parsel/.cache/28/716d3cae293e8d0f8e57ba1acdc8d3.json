{"id":"node_modules/core-js/internals/redefine.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/global","loc":{"line":1,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\redefine.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/is-callable","loc":{"line":2,"column":25},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\redefine.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\is-callable.js"},{"name":"../internals/has-own-property","loc":{"line":3,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\redefine.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\has-own-property.js"},{"name":"../internals/create-non-enumerable-property","loc":{"line":4,"column":42},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\redefine.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\create-non-enumerable-property.js"},{"name":"../internals/set-global","loc":{"line":5,"column":24},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\redefine.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\set-global.js"},{"name":"../internals/inspect-source","loc":{"line":6,"column":28},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\redefine.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\inspect-source.js"},{"name":"../internals/internal-state","loc":{"line":7,"column":34},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\redefine.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\internal-state.js"},{"name":"../internals/function-name","loc":{"line":8,"column":41},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\redefine.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\function-name.js"}],"generated":{"js":"\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  var name = options && options.name !== undefined ? options.name : key;\n  var state;\n  if (isCallable(value)) {\n    if (String(name).slice(0, 7) === 'Symbol(') {\n      name = '[' + String(name).replace(/^Symbol\\(([^)]*)\\)/, '$1') + ']';\n    }\n    if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n      createNonEnumerableProperty(value, 'name', name);\n    }\n    state = enforceInternalState(value);\n    if (!state.source) {\n      state.source = TEMPLATE.join(typeof name == 'string' ? name : '');\n    }\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n});\n"},"sourceMaps":null,"error":null,"hash":"9da9be403569327f7631f2f1aae16c23","cacheData":{"env":{}}}