{"id":"node_modules/core-js/internals/array-for-each.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/array-iteration","loc":{"line":2,"column":23},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-for-each.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-iteration.js"},{"name":"../internals/array-method-is-strict","loc":{"line":3,"column":34},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-for-each.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\array-method-is-strict.js"}],"generated":{"js":"'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n} : [].forEach;\n"},"sourceMaps":null,"error":null,"hash":"23b51bd586db5f8fa212b1497883245b","cacheData":{"env":{}}}