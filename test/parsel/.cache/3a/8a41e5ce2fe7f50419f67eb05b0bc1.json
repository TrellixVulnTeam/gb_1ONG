{"id":"node_modules/core-js/modules/es.string.iterator.js","dependencies":[{"name":"C:\\git\\gb\\test\\parsel\\package.json","includedInParent":true,"mtime":1635323427712},{"name":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1635323417056},{"name":"../internals/string-multibyte","loc":{"line":2,"column":21},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.string.iterator.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\string-multibyte.js"},{"name":"../internals/to-string","loc":{"line":3,"column":23},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.string.iterator.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\to-string.js"},{"name":"../internals/internal-state","loc":{"line":4,"column":34},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.string.iterator.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\internal-state.js"},{"name":"../internals/define-iterator","loc":{"line":5,"column":29},"parent":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\modules\\es.string.iterator.js","resolved":"C:\\git\\gb\\test\\parsel\\node_modules\\core-js\\internals\\define-iterator.js"}],"generated":{"js":"'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar toString = require('../internals/to-string');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: toString(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n"},"sourceMaps":null,"error":null,"hash":"4a310953ad1e8a92bf550be50b4a8506","cacheData":{"env":{}}}