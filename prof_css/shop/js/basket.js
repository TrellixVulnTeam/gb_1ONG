// 1 . Предположим, есть сущность корзины. Нужно реализовать функционал подсчета стоимости корзины в зависимости от находящихся в ней товаров.
//    Товары в корзине хранятся в массиве. Задачи:
// a) Организовать такой массив для хранения товаров в корзине;
// b) Организовать функцию countBasketPrice, которая будет считать стоимость корзины.

// 2. Продолжить работу с интернет-магазином:
// В прошлом домашнем задании вы реализовали корзину на базе массивов. Какими объектами можно заменить их элементы?
// Реализуйте такие объекты.
// Перенести функционал подсчета корзины на объектно-ориентированную базу.
// * Подумать над глобальными сущностями. К примеру, сущность «Продукт» в интернет-магазине актуальна
//  не только для корзины, но и для каталога. Стремиться нужно к тому, чтобы объект «Продукт» имел единую структуру 
//  для различных модулей сайта, но в разных местах давал возможность вызывать разные методы.

// 3. Сделать генерацию корзины динамической: верстка корзины не должна находиться в HTML-структуре. Там должен быть только div, 
// в который будет вставляться корзина, сгенерированная на базе JS:
// Пустая корзина должна выводить строку «Корзина пуста»;
// Наполненная должна выводить «В корзине: n товаров на сумму m рублей».
// * Сделать так, чтобы товары в каталоге выводились при помощи JS:
// Создать массив товаров (сущность Product);
// При загрузке страницы на базе данного массива генерировать вывод из него. HTML-код должен содержать только div id=”catalog” 
// без вложенного кода. Весь вид каталога генерируется JS.

var product = [
    {
        title: 'Кроссовки',
        price: 1000,
        count: 5
    },
    {
        title: 'Куртка',
        price: 2000,
        count: 2
    }
]

function countBasketPrice(goods) {
    var s = 0;
    for (var items of product) {
        // console.log('Товар: ' + items.title + ', Цена товара: ' + items.price + ', Количество товара: ' + items.count);
        s += items.count * items.price;
    }
    return s;
}

// console.log('Стоимость товара в корзине: ' + countBasketPrice(goods));